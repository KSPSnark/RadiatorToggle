// Add module to all radiators that are not deployable and which consume
// electricity. (There's no point in adding it to non-electric consumers,
// why would you want to toggle something that works for free?) Note, it's important
// not to add to deployable radiators, since ModuleDeployableRadiator already
// tries to manage active/inactive state, and adding this module there
// would result in confusing/buggy behavior.
@PART[*]:HAS[@MODULE[ModuleActiveRadiator:HAS[@RESOURCE[ElectricCharge]]],!MODULE[ModuleDeployableRadiator]] {
	@description ^= :(.)\s*$:$0 New and improved model is switchable!:
	MODULE {
		name = ModuleRadiatorToggle
	}

	// The electricity that a radiator consumes should be a function of its
	// cooling power. More cooling = thirstier for electric charge.
	// All of the folding radiators, and the smallest static panel, follow
	// a consistent ratio of electricity-per-cooling. However, the larger
	// static radiators don't follow this-- in stock, they consume only as
	// much electricity as the smallest static radiator, despite providing
	// much more cooling. My guess is that this was an oversight, or perhaps
	// they figured it was too much electricity drain for something that
	// can't be turned off.  However, now that they *can* be turned off,
	// we should restore the balance. :-)
	//
	// We'll enforce that they all follow the ratio of the small folding radiator.
	@MODULE[ModuleActiveRadiator] {
		@RESOURCE[ElectricCharge] {
			@rate = #$@PART[foldingRadSmall]/MODULE[ModuleActiveRadiator]/RESOURCE[ElectricCharge]/rate$
			@rate *= #$../maxEnergyTransfer$
			@rate /= #$@PART[foldingRadSmall]/MODULE[ModuleActiveRadiator]/maxEnergyTransfer$
		}
	}
}
